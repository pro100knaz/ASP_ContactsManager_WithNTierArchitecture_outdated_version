@model IEnumerable<PersonResponse>

@{
	ViewBag.Title = "Persons";
}


<form asp-action="Index" asp-controller="Persons" method="get">
	<h1 class="text-center">Default Page ...</h1>
	<h4 class="text-center text-green"> Maybe :)</h4>

	<a asp-action="Create" asp-controller="Persons" >Create New Person</a>

	<a asp-action="PersonsPdf" asp-controller="Persons">Download all as Pdf Data</a>


	<a asp-action="PersonsCSV" asp-controller="Persons">Download all as Persons format</a> 


	<a asp-action="PersonsExcel" asp-controller="Persons">Download all In Excel Data format</a>

	<div class="box flex">
		<div class="flex-1">
			<select class="form-input" name="searchBy">
				@* searchBy = PesonName (with name it becones a part of  form http request ) *@
				@foreach (var field in ViewBag.SearchFields)
				{
					if (field.Key == ViewBag.CurrentSearchBy)
					{
						<option value="@field.Key" selected="selected">@field.Value</option>
					}
					else
					{
						<option value="@field.Key">@field.Value</option>
					}
				}
			</select>
		</div> 
		<div class="flex-1">
			<input type="search" id="Search" value="@ViewBag.CurrentSearchString" class="form-input"
				   name="searchString"
				   placeholder="Search"></input>
		</div>
		<div class="flex-1">
			<button class="button button-blue-back">Search</button>
			<a href="~/persons/index" class="link-hover">Clear all</a>
		</div>
	</div>

	<table class="table w-100 mt persons">
		<thead>
			<tr>
				@await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData)
				{
				{"ColumnName", nameof(PersonResponse.PersonName)},
				{"DisplayName", "Person Name"}
				})

				@await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData)
				{
				{"ColumnName", nameof(PersonResponse.Email)},
				{"DisplayName", "Email"}
				})

				@await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData)
				{
				{"ColumnName", nameof(PersonResponse.DateOfBirth)},
				{"DisplayName", "Date Of Birth"}
				})

				@await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData)
				{
				{"ColumnName", nameof(PersonResponse.Age)},
				{"DisplayName", "Age"}
				})

				@await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData)
				{
				{"ColumnName", nameof(PersonResponse.Gender)},
				{"DisplayName", "Gender"}
				})

				@await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData)
				{
				{"ColumnName", nameof(PersonResponse.Country)},
				{"DisplayName", "Country"}
				})

				@await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData)
				{
				{"ColumnName", nameof(PersonResponse.Address)},
				{"DisplayName", "Address"}
				})

				@await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData)
				{
				{"ColumnName", nameof(PersonResponse.ReceiveNewsLatters)},
				{"DisplayName", "Receive New Laters"}
				})
				<th>Options</th>


				<!-- #region name -->
				@* @if(ViewBag.CurrentSortBy == nameof(PersonResponse.PersonName)
				&& ViewBag.CurrentSortOrder == SortOrderOptions.Ascending.ToString())
				{
				<th>
				<a href="~/persons/index?
				searchBy=@ViewBag.CurrentSearchBy&
				searchString=@ViewBag.CurrentSearchString&
				sortBy=@nameof(PersonResponse.PersonName)&
				sortOrder=@nameof(SortOrderOptions.Descending)">Person Name</a>
				<i class="fa-solid fa-sort-up"></i>
				</th>

				}
				else if (ViewBag.CurrentSortBy == nameof(PersonResponse.PersonName)
				&& ViewBag.CurrentSortOrder == SortOrderOptions.Descending.ToString())
				{
				<th>
				<a href="~/persons/index?
				searchBy=@ViewBag.CurrentSearchBy&
				searchString=@ViewBag.CurrentSearchString&
				sortBy=@nameof(PersonResponse.PersonName)&
				sortOrder=@nameof(SortOrderOptions.Ascending)">Person Name</a> @* в случае нажатии на кнопку вид сортировки поменяется */@
				<i class="fa-solid fa-sort-down"></i>
				</th>
				}
				else
				{
				<th>
				<a href="~/persons/index?
				searchBy=@ViewBag.CurrentSearchBy&
				searchString=@ViewBag.CurrentSearchString&
				sortBy=@nameof(PersonResponse.PersonName)&
				sortOrder=@nameof(SortOrderOptions.Ascending)">Person Name</a>
				</th>
				} *@
				<!-- #endregion -->
			</tr>
		</thead>
		<tbody>
			@foreach (PersonResponse person in Model)
			{
				<tr>
					<td style="width:15%">@person.PersonName</td>
					<td style="width:20%">@person.Email </td>
					<td style="width:13%">@person.DateOfBirth?.ToString("dd MMM yyyy")</td>
					<td style="width:9%">@person.Age</td>
					<td style="width:9%">@person.Gender</td>
					<td style="width:10%">@person.Country</td>
					<td style="width:10%">@person.Address</td>
					<td style="width:20%">@person.ReceiveNewsLatters.ToString()</td>
					<td style="width:20%" class="flex">
						<a asp-action="edit" asp-controller="persons" class="button button-green-back" asp-route-personID="@person.Id">Edit</a>
						<a asp-action="delete" asp-controller="persons" class="button button-red-back" asp-route-personID="@person.Id">Delete</a>
					</td>
				</tr>
			}
		</tbody>
	</table>
</form>